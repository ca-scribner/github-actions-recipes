# Handler of repository_dispatch events (events from external sources)
# Uses dispatcher code from the PR rather than master (lets you develop
# the dispatcher).  Could use master by removing PR ref creation steps
name: Receive Repository Dispatch Payload using Python
# The pipeline is triggered on:
#  - Repository Dispatch
on: repository_dispatch

jobs:
  process-repository-dispatch-via-python:
    runs-on: ubuntu-latest
    steps:
    - name: Test if editing on branch works for PRs
      run: echo "I'm on a branch!"

    - name: Dump GitHub context
      run: echo "${{ toJson(github) }}"

    - uses: actions/checkout@v2
    - name: Checkout associated PR code if specified
      if: github.event.client_payload.pr_num
      id: checkout_pr_code
      run: |
        event_ref="+refs/pull/${{ github.event.client_payload.pr_num }}/merge"
        echo "Writing $event_ref as output"
        echo "::set-output name=event_ref::$event_ref"
        git fetch origin ${{ steps.get_event_ref.outputs.event_ref }}
        git checkout FETCH_HEAD

#     This example is from https://github.com/kaizentm/kubemlops
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install Python dependencies
      run: |
        pip3 install requests --upgrade
    - name: Handle Repo Dispatch Payload
      id: rd
      run: |
        python3 event_dispatcher.py --event_type "${{ github.event.action }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # This example was taken from a Kubeflow Pipelines example
#         KFP_DSHB: ${{ secrets.KFP_DSHB }}
        KFP_DSHB: https://kubeflow.covid.cloud.statcan.ca/ 
      working-directory: .github/events
